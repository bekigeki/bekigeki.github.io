[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Überblick",
    "section": "",
    "text": "Die Punkte auf der Karte zeigen die Standorte der Schulen mit Grundschulklassen in Thüringen. Die blauen verdeutlichen die Schulen, die mindestens einmal in den Jahren von 2017 bis 2023 am Bewegungscheck des Programms “BEWEGTE KINDER = GESÜNDERE KINDER” (BeKiGeKi) der dritten Klassen in Thüringen teilnahmen.\n\n\n\n\n\n\n\n\n\n\nDatengrundlage\n\n\nSchuladressen, -nummern und -namen: https://www.schulportal-thueringen.de/schools (Stand 24. April 2023\nGeocoding: Cambon J, Hernangómez D, Belanger C, Possenriede D (2021). tidygeocoder: An R package for geocoding. Journal of Open Source Software, 6(65), 3544, https://doi.org/10.21105/joss.03544 (R package version 1.0.5 with ArcGIS Method)\nMessdaten im Excelformat von den Schulen, die am Programm “BEWEGTE KINDER=GESÜNDERE KINDER” (BeKiGeKi) teilnahmen\n\nAktualisierungen\n\n\n2024-02-28: Neue Daten Schuljahr 2023/2024\n2023-08-25: Link to German Kids Fitness Lab\n2023-05-10: Abschnitt Datengrundlage hinzugefügt\n2023-04-24: Erstellen der Seite"
  },
  {
    "objectID": "001.html",
    "href": "001.html",
    "title": "Teilnehmerzahlen",
    "section": "",
    "text": "Abbildung 1: Bemerkung: Kinder, die ein Schuljahr in der dritten Klasse wiederholten, könnten möglichwerweiße in Einzelfällen im Folgejahr noch einmal am Bewegungs-Check teilgenommen haben. Da keine eindeutige Kennung pro Kind jahrgangsübergreifend vorliegt, kann demnach auch genaue Aussage zur Gesamtzahl der erfassten unterschiedlichen Kindern getroffen werden (nur zur Anzahl der erfassten Kindern pro Jahr bzw. Gesamtzahl an Bewegungs-Checks.)\n\n\n\n\n\n\n\n\n\n\n\nAktualisierungen\n\n\n2024-03-25: Einbeziehung Datensätze ohne Geburtsdatumsangaben trotz vorhandener Sportmotorik-Testdaten\n2024-02-28: Neue Daten Schuljahr 2023/2024, Korrektur: -16 Schüler 2022 (Schulduplikat)\n2023-05-15: Zusammenfassung, Bemerkung zur Anzahl unterschiedlicher Kinder, Corona-Schutzmaßnahmen, frewillige/verpflichtende Teilnahme\n2023-05-05: Aktualisierung der Abbildung nach Eintreffen weiterer Datensätze, Ausschluss von Datensätzen die kein einziges Motorik-Testergebnis enthalten (trotz Vorhandensein von z.B. Geschlechts- oder Geburtstagsangabe)\n2023-04-24: Aktualisierung der Abbildung nach Eintreffen weiterer Datensätze\n2023-03-09: Erstellen der Seite\n\n\n\nWiederverwendunghttps://creativecommons.org/licenses/by/4.0/deed.deZitatBitte zitieren Sie diese Arbeit als:\nWöhrl, T., & Bähr, F. (2023, March 9). Teilnehmerzahlen. https://bekigeki.github.io/001.html"
  },
  {
    "objectID": "002.html",
    "href": "002.html",
    "title": "Schuljahre 2017-2022",
    "section": "",
    "text": "library(tidyverse)\nlibrary(dplyr)\nlibrary(kableExtra)\nlibrary(readxl)\nlibrary(sf)\nlibrary(leaflet)\nlibrary(leaflet.extras)\nlibrary(leafpop)\nlibrary(htmlwidgets)\nlibrary(webshot)\nlibrary(readxl)\nlibrary(reactable)\nd &lt;- readxl::read_excel(\"./data/bekigeki_Urdaten_bis_2022-2023-05-24.xlsx\") \n\n\n\n\nComponent &lt;- c(\"Star\",\"Run\",\"S20\",\"BPT\",\"SLJ\",\"OLB\")\n\nd_long &lt;- d |&gt; \n  pivot_longer(cols=Component,\n               names_to = \"Component\",\n               values_to = \"score\")|&gt;\n  mutate(score = as.numeric(score),\n        # change 0 values to NA\n        score = ifelse(score==0,NA,score))|&gt;\n  dplyr::select(-dateiname) |&gt;\n  # zScore based on all years\n  group_by(Sex, Component) |&gt; \n  mutate(zScore_All  = scale(score),\n         q_Upper_All = quantile(score,.80,na.rm=TRUE),\n         q_Lower_All = quantile(score,.20,na.rm=TRUE),\n         upper_all =ifelse(Component == \"Star\" | Component == \"S20\",\n                              score &lt;= q_Lower_All,\n                              score &gt;= q_Upper_All),\n         lower_all =ifelse(Component == \"Star\" | Component == \"S20\",\n                              score &gt;= q_Upper_All,\n                              score &lt;= q_Lower_All))|&gt;  \n  # zScore per Year\n  ungroup()|&gt;\n  group_by(Sex, Component, cohort) |&gt; \n  mutate(zScore_Cohort  = scale(score),\n         q_Upper_Cohort = quantile(score,.80,na.rm=TRUE),\n         q_Lower_Cohort = quantile(score,.20,na.rm=TRUE),\n         upper_cohort =ifelse(Component == \"Star\" | Component == \"S20\",\n                              score &lt;= q_Lower_Cohort,\n                              score &gt;= q_Upper_Cohort),\n         lower_cohort =ifelse(Component == \"Star\" | Component == \"S20\",\n                              score &gt;= q_Upper_Cohort,\n                              score &lt;= q_Lower_Cohort)\n         )|&gt; \n  ungroup()\n\nWarning: Using an external vector in selections was deprecated in tidyselect 1.1.0.\nℹ Please use `all_of()` or `any_of()` instead.\n  # Was:\n  data %&gt;% select(Component)\n\n  # Now:\n  data %&gt;% select(all_of(Component))\n\nSee &lt;https://tidyselect.r-lib.org/reference/faq-external-vector.html&gt;.\n\nd_summary &lt;- d_long |&gt; \n  dplyr::filter(Sex == \"m\" | Sex == \"w\")|&gt;\n  group_by(Child,Sex) |&gt;\n  reframe(\n   # Component=Component,\n   #  zScore_All=zScore_All,\n    Absence = sum(is.na(zScore_All)),\n    qUpperAll = sum(upper_all,na.rm=TRUE),\n    qLowerAll = sum(lower_all,na.rm = TRUE),\n    qUpperCohort = sum(upper_cohort,na.rm=TRUE),\n    qLowerCohort = sum(lower_cohort,na.rm=TRUE))|&gt;\n  ungroup()|&gt;\n  mutate(qAll = qUpperAll - qLowerAll,\n         qCohort = qUpperCohort - qLowerCohort)|&gt;\n  mutate(\n    Fitness_q_All = ifelse(Absence&lt;4,\n                           ifelse(qAll &lt;=-2,\"F\",\n                                 ifelse(qAll&gt;=2,\"T\",\n                                         ifelse(qAll&lt;2 & qAll&gt;-2,\"N\",NA))),NA),\n    Fitness_q_Cohort = ifelse(Absence&lt;4,\n                              ifelse(qCohort &lt;=-3,\"F\",\n                                     ifelse(qCohort&gt;=3,\"T\",\n                                            ifelse(-qCohort&lt;3 & qCohort&gt;-3,\"N\",NA))),NA),\n    Fitness_q_Cohort_T6 = ifelse(Absence&lt;4,\n                                 ifelse(qCohort &lt;=-2,\"F\",\n                                        ifelse(qCohort&gt;=2 & Absence ==0 ,\"T\",\n                                               ifelse((-qCohort&lt;2 & qCohort&gt;-2) | qCohort&gt;=2 & Absence !=0,\"N\",NA))),NA))\n\n    # \n    # qLowerAll = \n    #   sum((score &lt;= q_Lower_All & (Component!=\"S20\" | Component != \"Star\")) | \n    #         (score &gt;= q_Upper_All & (Component==\"S20\" | Component == \"Star\")),na.rm=TRUE),\n    # qUpperAll = \n    #   sum((score &gt;= q_Upper_All & (Component!=\"S20\" | Component != \"Star\")) |\n    #         (score &lt;= q_Lower_All & (Component==\"S20\" | Component == \"Star\")),na.rm=TRUE),\n    # qLowerCohort = \n    #   sum(((score &lt;= q_Lower_Cohort & (Component!=\"S20\" | Component != \"Star\")) |\n    #         (score &gt;= q_Upper_Cohort & (Component==\"S20\" | Component == \"Star\"))),na.rm=TRUE),\n    # qUpperCohort = \n    #   sum(((score &gt;= q_Upper_Cohort & (Component!=\"S20\" | Component != \"Star\")) |\n    #         (score &lt;= q_Lower_Cohort & (Component==\"S20\" | Component == \"Star\"))),na.rm=TRUE),\n\n\nr1 &lt;- d_summary |&gt; \n  merge(d[,c(\"Child\",\"cohort\")])|&gt; \n  pivot_longer(cols = c(\n                        Fitness_q_All,\n                        Fitness_q_Cohort,\n                        Fitness_q_Cohort_T6),\n               names_to = \"Norm\",values_to = \"Result\")|&gt;\n  group_by(Norm,Result,cohort)|&gt;\n  summarize(Number = n())|&gt;\n  pivot_wider(names_from=Norm,values_from = c(Number))|&gt;\n  t() |&gt; as.data.frame()\n\n`summarise()` has grouped output by 'Norm', 'Result'. You can override using\nthe `.groups` argument.\n\nr1\n\n                      V1   V2   V3   V4   V5   V6   V7   V8   V9  V10  V11  V12\nResult                 F    F    F    F    F    F    N    N    N    N    N    N\ncohort              2017 2018 2019 2020 2021 2022 2017 2018 2019 2020 2021 2022\nFitness_q_All        368 1288 1647  681 1632 3831  787 2721 3139 1097 2771 6124\nFitness_q_Cohort     248  856 1053  352  895 1861 1162 3923 4604 1641 4085 9116\nFitness_q_Cohort_T6  423 1482 1869  628 1603 3331  827 2820 3197 1165 2811 6531\n                     V13  V14  V15  V16  V17  V18  V19  V20  V21\nResult                 T    T    T    T    T    T &lt;NA&gt; &lt;NA&gt; &lt;NA&gt;\ncohort              2017 2018 2019 2020 2021 2022 2017 2021 2022\nFitness_q_All        520 1611 1834  568 1501 2834   38    2   23\nFitness_q_Cohort     265  841  963  353  924 1812   38    2   23\nFitness_q_Cohort_T6  425 1318 1554  553 1490 2927   38    2   23\n\nd_wide &lt;- d_long |&gt;\n#  rename(District = Kreis)|&gt;\n  pivot_wider(id_cols = c(Child,Sex,cohort,\n                          School,Name,District,\n                          lat,lon,\n                          AGS,\n                          Sport,Club,\n                          club_1,club_2,club_3,\n                          Inclusion),\n              names_from = Component,\n              values_from = c(\"score\",\"q_Upper_Cohort\",\"q_Lower_Cohort\")) |&gt;\n  merge(d_summary) \n\n\nt1 &lt;- d_wide |&gt; \n  filter(!is.na(Sport))|&gt;\n  filter(!is.na(Club))|&gt;\n  group_by(cohort,District,School,Name,Sex,Club,Sport) |&gt;\n  summarise(Gesamtzahl = n(),\n            `auswertbar` = sum(\n              (Sex==\"m\" | Sex == \"w\") & \n                Absence &lt; 4 & \n                !is.na(Sport) &\n                !is.na(Club) & \n                !is.na(Fitness_q_Cohort)),\n            T = sum(Fitness_q_Cohort ==\"T\",na.rm=TRUE),\n            F = sum(Fitness_q_Cohort ==\"F\",na.rm=TRUE),\n            N = sum(Fitness_q_Cohort ==\"N\",na.rm=TRUE)\n            ) |&gt;\n  mutate(T_rel = round(T/auswertbar*100),\n         F_rel = round(F/auswertbar*100),\n         N_rel = round(N/auswertbar*100)\n         # check_rel = T_rel + F_rel + N_rel,\n         # check = T + F + N - auswertbar\n         )|&gt;\n  ungroup()\n\n`summarise()` has grouped output by 'cohort', 'District', 'School', 'Name',\n'Sex', 'Club'. You can override using the `.groups` argument.\n\nwith_tooltip2 &lt;- function(value, tooltip) {\n  tags$abbr(style = \"text-decoration: underline; text-decoration-style: dotted; cursor: help\",\n            title = tooltip,value)\n}\n\nlibrary(tippy)\nwith_tooltip &lt;- function(value, tooltip, ...) {\n  div(style = \"text-decoration: underline; text-decoration-style: dotted; cursor: help\",\n      tippy(value, tooltip, ...))\n}\n\n\n\n\n\n\n# Render a bar chart in the background of the cell\nbar_style &lt;- function(width = 1, fill = \"#e6e6e6\", height = \"75%\",\n                      align = c(\"left\", \"right\"), color = NULL) {\n  align &lt;- match.arg(align)\n  if (align == \"left\") {\n    position &lt;- paste0(width * 100, \"%\")\n    image &lt;- sprintf(\"linear-gradient(90deg, %1$s %2$s, transparent %2$s)\", fill, position)\n  } else {\n    position &lt;- paste0(100 - width * 100, \"%\")\n    image &lt;- sprintf(\"linear-gradient(90deg, transparent %1$s, %2$s %1$s)\", position, fill)\n  }\n  list(\n    backgroundImage = image,\n    backgroundSize = paste(\"100%\", height),\n    backgroundRepeat = \"no-repeat\",\n    backgroundPosition = \"center\",\n    color = color\n  )\n}\n\nbar_chart &lt;- function(label, width = \"100%\", height = \"1rem\", fill = \"#00bfc4\", background = NULL) {\n  bar &lt;- div(style = list(background = fill, width = width, height = height))\n  chart &lt;- div(style = list(height = height,flexGrow = 1, marginLeft = \"0rem\",marginRight = \"0.5rem\", background = background), bar)\n # div(style = list(display = \"flex\", alignItems = \"left\"), label, chart)\ndiv(div(style = list(display = \"flex\", \n                 align = \"right\"), paste0(label,\" %\")),div(style = list(display = \"flex\", \n                 alignItems = \"center\"),chart))\n\n}\n# Source: https://glin.github.io/reactable/articles/custom-filtering.html\n# 2022-03-23\n# Custom range input filter with label and value\nrangeFilter1 &lt;- function(tableId, columnId, label, min, max, value = NULL, step = NULL, width = \"200px\") {\n  value &lt;- if (!is.null(value)) value else min\n  inputId &lt;- sprintf(\"filter_%s_%s\", tableId, columnId)\n  valueId &lt;- sprintf(\"filter_%s_%s__value\", tableId, columnId)\n  oninput &lt;- paste(\n    sprintf(\"document.getElementById('%s').textContent = this.value;\", valueId),\n    sprintf(\"Reactable.setFilter('%s', '%s', this.value)\", tableId, columnId)\n  )\n  \n  div(\n    tags$label(`for` = inputId, label),\n    div(\n      style = sprintf(\"display: flex; align-items: center; width: %s\", validateCssUnit(width)),\n      tags$input(\n        id = inputId,\n        type = \"range\",\n        min = min,\n        max = max,\n        step = step,\n        value = value,\n        oninput = oninput,\n        onchange = oninput, # For IE11 support\n        style = \"width: 100%;\"\n      ),\n      span(id = valueId, style = \"margin-left: 8px;\", value)\n    )\n  )\n}\n\n# Source: https://glin.github.io/reactable/articles/custom-filtering.html\nrangeFilter2 &lt;- function(values, name) {\n        tags$select(\n          # Set to undefined to clear the filter\n          onchange = sprintf(\"Reactable.setFilter('cars-select', '%s', event.target.value || undefined)\", name),\n          # \"All\" has an empty value to clear the filter, and is the default option\n          tags$option(value = \"\", \"Alle\"),\n          lapply(unique(values), tags$option),\n          \"aria-label\" = sprintf(\"Filter %s\", name),\n          style = \"width: 100%; height: 28px;\"\n        )\n}\n\n# Custom range input filter with label and value\nrangeFilter &lt;- function(tableId, columnId, label, min, max, value = NULL, step = NULL, width = \"200px\") {\n  value &lt;- if (!is.null(value)) value else min\n  inputId &lt;- sprintf(\"filter_%s_%s\", tableId, columnId)\n  valueId &lt;- sprintf(\"filter_%s_%s__value\", tableId, columnId)\n  oninput &lt;- paste(\n    sprintf(\"document.getElementById('%s').textContent = this.value;\", valueId),\n    sprintf(\"Reactable.setFilter('%s', '%s', this.value)\", tableId, columnId)\n  )\n  \n  div(\n    tags$label(`for` = inputId, label),\n    div(\n      style = sprintf(\"display: flex; align-items: center; width: %s\", validateCssUnit(width)),\n      tags$input(\n        id = inputId,\n        type = \"range\",\n        min = min,\n        max = max,\n        step = step,\n        value = value,\n        oninput = oninput,\n        onchange = oninput, # For IE11 support\n        style = \"width: 100%;\"\n      ),\n      span(id = valueId, style = \"margin-left: 8px;\", value)\n    )\n  )\n}\n\n# Filter method that filters numeric columns by minimum value\nfilterMinValue &lt;- JS(\"function(rows, columnId, filterValue) {\n  return rows.filter(function(row) {\n    return row.values[columnId] &gt;= filterValue\n  })\n}\")\n# Filter method that filters numeric columns by minimum value\nfilterMinValue &lt;- JS(\"function(rows, columnId, filterValue) {\n  return rows.filter(function(row) {\n    return row.values[columnId] &gt;= filterValue\n  })\n}\")\n\n# Source: https://github.com/glin/reactable/blob/HEAD/vignettes/popular-movies/popular-movies.Rmd\n# 2023-03-23\nselect_filter &lt;- function(id, label, shared_data, group, choices = NULL,\n                          width = \"100%\", class = \"filter-input\") {\n  values &lt;- shared_data$data()[[group]]\n  keys &lt;- shared_data$key()\n  if (is.list(values)) {\n    # Multiple values per row\n    flat_keys &lt;- unlist(mapply(rep, keys, sapply(values, length)))\n    keys_by_value &lt;- split(flat_keys, unlist(values), drop = TRUE)\n    choices &lt;- if (is.null(choices)) sort(unique(unlist(values))) else choices\n  } else {\n    # Single value per row\n    keys_by_value &lt;- split(seq_along(keys), values, drop = TRUE)\n    choices &lt;- if (is.null(choices)) sort(unique(values)) else choices\n  }\n\n  script &lt;- sprintf(\"\n    window['__ct__%s'] = (function() {\n      const handle = new window.crosstalk.FilterHandle('%s')\n      const keys = %s\n      return {\n        filter: function(value) {\n          if (!value) {\n            handle.clear()\n          } else {\n            handle.set(keys[value])\n          }\n        }\n      }\n    })()\n  \", id, shared_data$groupName(), toJSON(keys_by_value))\n\n  div(\n    class = class,\n    tags$label(`for` = id, label),\n    tags$select(\n      id = id,\n      onchange = sprintf(\"window['__ct__%s'].filter(this.value)\", id),\n      style = sprintf(\"width: %s\", validateCssUnit(width)),\n      tags$option(value = \"\", \"Alle\"),\n      lapply(choices, function(value) tags$option(value = value, value))\n    ),\n    tags$script(HTML(script))\n  )\n}\n\n# https://glin.github.io/reactable/articles/custom-filtering.html\n# 2023-02-23\n# Creates a data list column filter for a table with the given ID\ndataListFilter &lt;- function(tableId, style = \"width: 100%; height: 28px;\") {\n  function(values, name) {\n    dataListId &lt;- sprintf(\"%s-%s-list\", tableId, name)\n    tagList(\n      tags$input(\n        type = \"text\",\n        list = dataListId,\n        oninput = sprintf(\"Reactable.setFilter('%s', '%s', event.target.value || undefined)\", tableId, name),\n        \"aria-label\" = sprintf(\"Filter %s\", name),\n        style = style\n      ),\n      tags$datalist(\n        id = dataListId,\n        lapply(unique(values), function(value) tags$option(value = value))\n      )\n    )\n  }\n}\n\n\n\n\n\n\nlibrary(crosstalk)\n# shared table\nt2 &lt;- t1 |&gt; select(-Gesamtzahl,-T_rel,-F_rel,-N_rel)\nshared_data &lt;- SharedData$new(t2)\n\n# styles\nsticky_style &lt;- list(backgroundColor = \"#f7f7f7\")\nsticky_style_r &lt;- list(borderTop = \"0px solid #eee\",borderLeft = \"0px solid #eee\",borderRight = \"0px solid #eee\")\n\nrotate_header_style&lt;- list(\n          `white-space` = \"nowrap\",\n          `transform-origin` = \"0% 50%\",\n           transform = \"rotate(-90deg)\",\n          `margin-top` = \"10px\",\n          `margin-bottom` = \"10px\",\n           borderColor = \"#ffffff\"\n        )\nsmall_header_style &lt;- list(`font-size` =  \"10px\")\nsticky_style_l &lt;- list(borderLeft = \"0px solid #eee\")\n\nlibrary(htmltools)\n# reactable\ntbl&lt;-reactable(\n  shared_data,\n  defaultColDef = colDef(\n  #  headerStyle = sticky_style_r,\n    align = \"right\",\n    footerStyle = list(fontWeight = \"bold\"),\n    #   maxWidth = 120,\n    vAlign=\"top\"),\n  searchable = TRUE,\n  resizable = TRUE,\n  wrap = TRUE,\n  pagination=TRUE,\n  paginateSubRows = TRUE,\n  # paginationType = \"jump\", \n  defaultPageSize = 10,\n  showSortable = TRUE,\n  bordered = FALSE,\n  compact=TRUE,\n  # details = function(index) {\n  #t1$Name[index]},\n  #  onClick = \"select\",\n  #height = 800,\n  #  width=600,\n  # defaultPageSize = 20,\n  striped = TRUE,\n  #elementId = \"cars-vis-table\",\n  elementId = \"cars-grouping-table\",\n  highlight = TRUE,\n  \n  filterable = FALSE,\n  groupBy = c(\"cohort\"),\n  columns = list(\n    Sport = colDef(name = \"Sport-AG\",\n                   align=\"left\",\n                   width=70,\n                   headerStyle = small_header_style,\n                   filterable = FALSE),\n    cohort = colDef(name = \"Jahr\",\n                    align=\"left\",\n                    minWidth=60,\n                    headerStyle = small_header_style,\n                    filterable = FALSE),\n    Sex = colDef(name=\"Geschlecht\",\n                 align=\"left\",\n                 width=70,\n                 sortable = FALSE,\n                 #  width = 50,\n                      headerStyle = small_header_style,\n                 filterable=FALSE),\n    Club = colDef(name=\"Verein\",\n                  sortable = FALSE,\n                  filterable=FALSE,\n                  width=60,\n                      headerStyle = small_header_style,\n                  align=\"left\"),\n    Name = colDef(name = \"Schule\",\n                  sortable = TRUE,\n                  show=TRUE,\n                  minWidth = 100,\n                  align=\"left\",\n                  headerStyle = small_header_style,\n                  #style = \"font-weight: 100\",\n                  # Show species under character names\n                  cell = function(value, index) {\n                    School&lt;- t1$School[index]\n                    School &lt;- if (!is.na(School)) School else \"Unknown\"\n                    div(\n                      div(style = \"font-weight: 100\", value),\n                      div(style = \"font-size: 0.75rem\", School)\n                    )\n                  }),\n    School = colDef(show=FALSE,\n                    minWidth = 100,\n                    headerStyle = small_header_style,\n                    sortable = TRUE), #Schulnummer\n    #  School = colDef(show=FALSE),\n    District = colDef(name=\"Kreis\",\n                      minWidth = 80,\n                      headerStyle = small_header_style,\n                      show=TRUE,align=\"left\",sortable = TRUE),\n    # Gesamtzahl= colDef(name=\"N\",\n    #                    width=90,\n    #                    align = \"right\",\n    #           aggregate = \"sum\",\n    #           html=TRUE,\n    #         \n    #        #   footer = function(values) \n    #         #    sprintf(\"&#x2211; %.0f\", \n    #          #           #sum(shared_data$Gesamtzahl)\n    #           #           sum(values)\n    #                     \n    #            #         )\n    #               footer = JS(\"function(colInfo) {\n    #     var total = 0\n    #     colInfo.data.forEach(function(row) {\n    #       total += row['Gesamtzahl']\n    #     })\n    #     return '&#x2211; ' + total.toFixed(0)\n    #   }\")\n    #           ),\n    auswertbar= colDef(name=\"N&lt;sub&gt;a&lt;/sub&gt;\",\n                       html=TRUE,\n                       width=90,\n                       headerStyle = small_header_style,\n                       header = with_tooltip(\"Gesamtzahl &lt;div style=\\\"font-size: 10px; font-weight:normal\\\"&gt; (Anzahl auswertbar)&lt;/div&gt;\",\"vollständig auswertbare Datensätze für diese Darstellungsform (Teilnahme an mind. 4 Testaufgaben, Information zu Geschlecht, Verein UND Sport-AG vorhanden)\"),\n                       align = \"right\",\n                       sticky = \"right\",\n                       aggregate = \"sum\",\n                       #   footer = function(values) \n                       #    sprintf(\"&#x2211; %.0f\", sum(values))\n                       #https://github.com/glin/reactable/issues/78\n                       footer = JS(\"function(colInfo) {\n        var total = 0\n        colInfo.data.forEach(function(row) {\n          total += row['auswertbar']\n        })\n        return '&#x2211; ' + total.toFixed(0)\n      }\")\n    ),\n    T= colDef(align = \"right\",\n              name=\"positiv\",\n              html=TRUE,\n              width=80,\n              headerStyle = small_header_style,\n              header = with_tooltip(\"positiv &lt;div style=\\\"font-size: 10px; font-weight:normal\\\"&gt; (Anzahl)&lt;/div&gt;\",\"'Potentielle Talente:' Anzahl an Schülerinnen und Schülern, die an mindestens vier Motorik-Tests teilnahmen UND mindestens zweimal öfter Testergebnisse im oberen Quintil als im unteren Quintil in Bezug auf die Gesamtstichprobe aus Thüringen für das jeweilige Jahr und Geschlecht erzielten.\"),\n              aggregate = \"sum\",\n              #  footer = function(values) \n              #     sprintf(\"%.0f\", sum(values))\n              footer = JS(\"function(colInfo) {\n        var total = 0\n        colInfo.data.forEach(function(row) {\n          total += row['T']\n        })\n        return '&#x2211; ' + total.toFixed(0)\n      }\")\n    ),\n    F= colDef(align = \"right\",\n              name=\"negativ\",\n              html=TRUE,\n              headerStyle = small_header_style,\n              header = with_tooltip(\"negativ &lt;div style=\\\"font-size: 10px; font-weight:normal\\\"&gt; (Anzahl)&lt;/div&gt;\",\"'Eventueller Förderbedarf:' Anzahl an Schülerinnen und Schülern, die an mindestens vier Motorik-Tests teilnahmen UND die mindestens zweimal öfter Testergebnisse im unteren Quintil als im oberen Quintil in Bezug auf die Gesamtstichprobe aus Thüringen für das jeweilige Jahr und Geschlecht erzielten.\"),\n              width=60,\n              aggregate = \"sum\",\n              #  footer = function(values) \n              #     sprintf(\"%.0f\", sum(values))\n              footer = JS(\"function(colInfo) {\n        var total = 0\n        colInfo.data.forEach(function(row) {\n          total += row['F']\n        })\n        return '&#x2211; ' + total.toFixed(0)\n      }\")\n    ),\n    N= colDef(align = \"right\",\n              name=\"unauffällig\",\n              html=TRUE,\n              headerStyle = small_header_style,\n              sticky = \"right\",\n             \n              header = with_tooltip(\"unauffällig &lt;div style=\\\"font-size: 10px; font-weight:normal\\\"&gt; (Anzahl)&lt;/div&gt;\",\"'Erwartungsgemäß:' Anzahl an Schülerinnen und Schülern, die an mindestens vier Motorik-Tests teilnahmen UND für die NICHT die anderen beiden Bedingungen zutreffen (siehe Tooltips).\"),\n              width=70,\n              aggregate = \"sum\",\n              #  footer = function(values) \n              #     sprintf(\"%.0f\", sum(values))\n              footer = JS(\"function(colInfo) {\n        var total = 0\n        colInfo.data.forEach(function(row) {\n          total += row['N']\n        })\n        return '&#x2211; ' + total.toFixed(0)\n      }\")\n            )),\ncolumnGroups = list(\n  colGroup(\n  name = \"motorisch auffällig\", \n  sticky = \"right\",\n           columns = c(\n                       \"T\",\"F\"))\n  # colGroup(name = \"Gesamtzahl\", \n  #          sticky=\"left\",\n  #          columns = c(\"Gesamtzahl\", \n  #                      \"auswertbar\"))\n  \n ))\n \n\nlibrary(jsonlite)"
  },
  {
    "objectID": "002.html#long-data",
    "href": "002.html#long-data",
    "title": "Schuljahre 2017-2022",
    "section": "",
    "text": "Component &lt;- c(\"Star\",\"Run\",\"S20\",\"BPT\",\"SLJ\",\"OLB\")\n\nd_long &lt;- d |&gt; \n  pivot_longer(cols=Component,\n               names_to = \"Component\",\n               values_to = \"score\")|&gt;\n  mutate(score = as.numeric(score),\n        # change 0 values to NA\n        score = ifelse(score==0,NA,score))|&gt;\n  dplyr::select(-dateiname) |&gt;\n  # zScore based on all years\n  group_by(Sex, Component) |&gt; \n  mutate(zScore_All  = scale(score),\n         q_Upper_All = quantile(score,.80,na.rm=TRUE),\n         q_Lower_All = quantile(score,.20,na.rm=TRUE),\n         upper_all =ifelse(Component == \"Star\" | Component == \"S20\",\n                              score &lt;= q_Lower_All,\n                              score &gt;= q_Upper_All),\n         lower_all =ifelse(Component == \"Star\" | Component == \"S20\",\n                              score &gt;= q_Upper_All,\n                              score &lt;= q_Lower_All))|&gt;  \n  # zScore per Year\n  ungroup()|&gt;\n  group_by(Sex, Component, cohort) |&gt; \n  mutate(zScore_Cohort  = scale(score),\n         q_Upper_Cohort = quantile(score,.80,na.rm=TRUE),\n         q_Lower_Cohort = quantile(score,.20,na.rm=TRUE),\n         upper_cohort =ifelse(Component == \"Star\" | Component == \"S20\",\n                              score &lt;= q_Lower_Cohort,\n                              score &gt;= q_Upper_Cohort),\n         lower_cohort =ifelse(Component == \"Star\" | Component == \"S20\",\n                              score &gt;= q_Upper_Cohort,\n                              score &lt;= q_Lower_Cohort)\n         )|&gt; \n  ungroup()\n\nWarning: Using an external vector in selections was deprecated in tidyselect 1.1.0.\nℹ Please use `all_of()` or `any_of()` instead.\n  # Was:\n  data %&gt;% select(Component)\n\n  # Now:\n  data %&gt;% select(all_of(Component))\n\nSee &lt;https://tidyselect.r-lib.org/reference/faq-external-vector.html&gt;.\n\nd_summary &lt;- d_long |&gt; \n  dplyr::filter(Sex == \"m\" | Sex == \"w\")|&gt;\n  group_by(Child,Sex) |&gt;\n  reframe(\n   # Component=Component,\n   #  zScore_All=zScore_All,\n    Absence = sum(is.na(zScore_All)),\n    qUpperAll = sum(upper_all,na.rm=TRUE),\n    qLowerAll = sum(lower_all,na.rm = TRUE),\n    qUpperCohort = sum(upper_cohort,na.rm=TRUE),\n    qLowerCohort = sum(lower_cohort,na.rm=TRUE))|&gt;\n  ungroup()|&gt;\n  mutate(qAll = qUpperAll - qLowerAll,\n         qCohort = qUpperCohort - qLowerCohort)|&gt;\n  mutate(\n    Fitness_q_All = ifelse(Absence&lt;4,\n                           ifelse(qAll &lt;=-2,\"F\",\n                                 ifelse(qAll&gt;=2,\"T\",\n                                         ifelse(qAll&lt;2 & qAll&gt;-2,\"N\",NA))),NA),\n    Fitness_q_Cohort = ifelse(Absence&lt;4,\n                              ifelse(qCohort &lt;=-3,\"F\",\n                                     ifelse(qCohort&gt;=3,\"T\",\n                                            ifelse(-qCohort&lt;3 & qCohort&gt;-3,\"N\",NA))),NA),\n    Fitness_q_Cohort_T6 = ifelse(Absence&lt;4,\n                                 ifelse(qCohort &lt;=-2,\"F\",\n                                        ifelse(qCohort&gt;=2 & Absence ==0 ,\"T\",\n                                               ifelse((-qCohort&lt;2 & qCohort&gt;-2) | qCohort&gt;=2 & Absence !=0,\"N\",NA))),NA))\n\n    # \n    # qLowerAll = \n    #   sum((score &lt;= q_Lower_All & (Component!=\"S20\" | Component != \"Star\")) | \n    #         (score &gt;= q_Upper_All & (Component==\"S20\" | Component == \"Star\")),na.rm=TRUE),\n    # qUpperAll = \n    #   sum((score &gt;= q_Upper_All & (Component!=\"S20\" | Component != \"Star\")) |\n    #         (score &lt;= q_Lower_All & (Component==\"S20\" | Component == \"Star\")),na.rm=TRUE),\n    # qLowerCohort = \n    #   sum(((score &lt;= q_Lower_Cohort & (Component!=\"S20\" | Component != \"Star\")) |\n    #         (score &gt;= q_Upper_Cohort & (Component==\"S20\" | Component == \"Star\"))),na.rm=TRUE),\n    # qUpperCohort = \n    #   sum(((score &gt;= q_Upper_Cohort & (Component!=\"S20\" | Component != \"Star\")) |\n    #         (score &lt;= q_Lower_Cohort & (Component==\"S20\" | Component == \"Star\"))),na.rm=TRUE),\n\n\nr1 &lt;- d_summary |&gt; \n  merge(d[,c(\"Child\",\"cohort\")])|&gt; \n  pivot_longer(cols = c(\n                        Fitness_q_All,\n                        Fitness_q_Cohort,\n                        Fitness_q_Cohort_T6),\n               names_to = \"Norm\",values_to = \"Result\")|&gt;\n  group_by(Norm,Result,cohort)|&gt;\n  summarize(Number = n())|&gt;\n  pivot_wider(names_from=Norm,values_from = c(Number))|&gt;\n  t() |&gt; as.data.frame()\n\n`summarise()` has grouped output by 'Norm', 'Result'. You can override using\nthe `.groups` argument.\n\nr1\n\n                      V1   V2   V3   V4   V5   V6   V7   V8   V9  V10  V11  V12\nResult                 F    F    F    F    F    F    N    N    N    N    N    N\ncohort              2017 2018 2019 2020 2021 2022 2017 2018 2019 2020 2021 2022\nFitness_q_All        368 1288 1647  681 1632 3831  787 2721 3139 1097 2771 6124\nFitness_q_Cohort     248  856 1053  352  895 1861 1162 3923 4604 1641 4085 9116\nFitness_q_Cohort_T6  423 1482 1869  628 1603 3331  827 2820 3197 1165 2811 6531\n                     V13  V14  V15  V16  V17  V18  V19  V20  V21\nResult                 T    T    T    T    T    T &lt;NA&gt; &lt;NA&gt; &lt;NA&gt;\ncohort              2017 2018 2019 2020 2021 2022 2017 2021 2022\nFitness_q_All        520 1611 1834  568 1501 2834   38    2   23\nFitness_q_Cohort     265  841  963  353  924 1812   38    2   23\nFitness_q_Cohort_T6  425 1318 1554  553 1490 2927   38    2   23\n\nd_wide &lt;- d_long |&gt;\n#  rename(District = Kreis)|&gt;\n  pivot_wider(id_cols = c(Child,Sex,cohort,\n                          School,Name,District,\n                          lat,lon,\n                          AGS,\n                          Sport,Club,\n                          club_1,club_2,club_3,\n                          Inclusion),\n              names_from = Component,\n              values_from = c(\"score\",\"q_Upper_Cohort\",\"q_Lower_Cohort\")) |&gt;\n  merge(d_summary) \n\n\nt1 &lt;- d_wide |&gt; \n  filter(!is.na(Sport))|&gt;\n  filter(!is.na(Club))|&gt;\n  group_by(cohort,District,School,Name,Sex,Club,Sport) |&gt;\n  summarise(Gesamtzahl = n(),\n            `auswertbar` = sum(\n              (Sex==\"m\" | Sex == \"w\") & \n                Absence &lt; 4 & \n                !is.na(Sport) &\n                !is.na(Club) & \n                !is.na(Fitness_q_Cohort)),\n            T = sum(Fitness_q_Cohort ==\"T\",na.rm=TRUE),\n            F = sum(Fitness_q_Cohort ==\"F\",na.rm=TRUE),\n            N = sum(Fitness_q_Cohort ==\"N\",na.rm=TRUE)\n            ) |&gt;\n  mutate(T_rel = round(T/auswertbar*100),\n         F_rel = round(F/auswertbar*100),\n         N_rel = round(N/auswertbar*100)\n         # check_rel = T_rel + F_rel + N_rel,\n         # check = T + F + N - auswertbar\n         )|&gt;\n  ungroup()\n\n`summarise()` has grouped output by 'cohort', 'District', 'School', 'Name',\n'Sex', 'Club'. You can override using the `.groups` argument.\n\nwith_tooltip2 &lt;- function(value, tooltip) {\n  tags$abbr(style = \"text-decoration: underline; text-decoration-style: dotted; cursor: help\",\n            title = tooltip,value)\n}\n\nlibrary(tippy)\nwith_tooltip &lt;- function(value, tooltip, ...) {\n  div(style = \"text-decoration: underline; text-decoration-style: dotted; cursor: help\",\n      tippy(value, tooltip, ...))\n}\n\n\n\n\n\n\n# Render a bar chart in the background of the cell\nbar_style &lt;- function(width = 1, fill = \"#e6e6e6\", height = \"75%\",\n                      align = c(\"left\", \"right\"), color = NULL) {\n  align &lt;- match.arg(align)\n  if (align == \"left\") {\n    position &lt;- paste0(width * 100, \"%\")\n    image &lt;- sprintf(\"linear-gradient(90deg, %1$s %2$s, transparent %2$s)\", fill, position)\n  } else {\n    position &lt;- paste0(100 - width * 100, \"%\")\n    image &lt;- sprintf(\"linear-gradient(90deg, transparent %1$s, %2$s %1$s)\", position, fill)\n  }\n  list(\n    backgroundImage = image,\n    backgroundSize = paste(\"100%\", height),\n    backgroundRepeat = \"no-repeat\",\n    backgroundPosition = \"center\",\n    color = color\n  )\n}\n\nbar_chart &lt;- function(label, width = \"100%\", height = \"1rem\", fill = \"#00bfc4\", background = NULL) {\n  bar &lt;- div(style = list(background = fill, width = width, height = height))\n  chart &lt;- div(style = list(height = height,flexGrow = 1, marginLeft = \"0rem\",marginRight = \"0.5rem\", background = background), bar)\n # div(style = list(display = \"flex\", alignItems = \"left\"), label, chart)\ndiv(div(style = list(display = \"flex\", \n                 align = \"right\"), paste0(label,\" %\")),div(style = list(display = \"flex\", \n                 alignItems = \"center\"),chart))\n\n}\n# Source: https://glin.github.io/reactable/articles/custom-filtering.html\n# 2022-03-23\n# Custom range input filter with label and value\nrangeFilter1 &lt;- function(tableId, columnId, label, min, max, value = NULL, step = NULL, width = \"200px\") {\n  value &lt;- if (!is.null(value)) value else min\n  inputId &lt;- sprintf(\"filter_%s_%s\", tableId, columnId)\n  valueId &lt;- sprintf(\"filter_%s_%s__value\", tableId, columnId)\n  oninput &lt;- paste(\n    sprintf(\"document.getElementById('%s').textContent = this.value;\", valueId),\n    sprintf(\"Reactable.setFilter('%s', '%s', this.value)\", tableId, columnId)\n  )\n  \n  div(\n    tags$label(`for` = inputId, label),\n    div(\n      style = sprintf(\"display: flex; align-items: center; width: %s\", validateCssUnit(width)),\n      tags$input(\n        id = inputId,\n        type = \"range\",\n        min = min,\n        max = max,\n        step = step,\n        value = value,\n        oninput = oninput,\n        onchange = oninput, # For IE11 support\n        style = \"width: 100%;\"\n      ),\n      span(id = valueId, style = \"margin-left: 8px;\", value)\n    )\n  )\n}\n\n# Source: https://glin.github.io/reactable/articles/custom-filtering.html\nrangeFilter2 &lt;- function(values, name) {\n        tags$select(\n          # Set to undefined to clear the filter\n          onchange = sprintf(\"Reactable.setFilter('cars-select', '%s', event.target.value || undefined)\", name),\n          # \"All\" has an empty value to clear the filter, and is the default option\n          tags$option(value = \"\", \"Alle\"),\n          lapply(unique(values), tags$option),\n          \"aria-label\" = sprintf(\"Filter %s\", name),\n          style = \"width: 100%; height: 28px;\"\n        )\n}\n\n# Custom range input filter with label and value\nrangeFilter &lt;- function(tableId, columnId, label, min, max, value = NULL, step = NULL, width = \"200px\") {\n  value &lt;- if (!is.null(value)) value else min\n  inputId &lt;- sprintf(\"filter_%s_%s\", tableId, columnId)\n  valueId &lt;- sprintf(\"filter_%s_%s__value\", tableId, columnId)\n  oninput &lt;- paste(\n    sprintf(\"document.getElementById('%s').textContent = this.value;\", valueId),\n    sprintf(\"Reactable.setFilter('%s', '%s', this.value)\", tableId, columnId)\n  )\n  \n  div(\n    tags$label(`for` = inputId, label),\n    div(\n      style = sprintf(\"display: flex; align-items: center; width: %s\", validateCssUnit(width)),\n      tags$input(\n        id = inputId,\n        type = \"range\",\n        min = min,\n        max = max,\n        step = step,\n        value = value,\n        oninput = oninput,\n        onchange = oninput, # For IE11 support\n        style = \"width: 100%;\"\n      ),\n      span(id = valueId, style = \"margin-left: 8px;\", value)\n    )\n  )\n}\n\n# Filter method that filters numeric columns by minimum value\nfilterMinValue &lt;- JS(\"function(rows, columnId, filterValue) {\n  return rows.filter(function(row) {\n    return row.values[columnId] &gt;= filterValue\n  })\n}\")\n# Filter method that filters numeric columns by minimum value\nfilterMinValue &lt;- JS(\"function(rows, columnId, filterValue) {\n  return rows.filter(function(row) {\n    return row.values[columnId] &gt;= filterValue\n  })\n}\")\n\n# Source: https://github.com/glin/reactable/blob/HEAD/vignettes/popular-movies/popular-movies.Rmd\n# 2023-03-23\nselect_filter &lt;- function(id, label, shared_data, group, choices = NULL,\n                          width = \"100%\", class = \"filter-input\") {\n  values &lt;- shared_data$data()[[group]]\n  keys &lt;- shared_data$key()\n  if (is.list(values)) {\n    # Multiple values per row\n    flat_keys &lt;- unlist(mapply(rep, keys, sapply(values, length)))\n    keys_by_value &lt;- split(flat_keys, unlist(values), drop = TRUE)\n    choices &lt;- if (is.null(choices)) sort(unique(unlist(values))) else choices\n  } else {\n    # Single value per row\n    keys_by_value &lt;- split(seq_along(keys), values, drop = TRUE)\n    choices &lt;- if (is.null(choices)) sort(unique(values)) else choices\n  }\n\n  script &lt;- sprintf(\"\n    window['__ct__%s'] = (function() {\n      const handle = new window.crosstalk.FilterHandle('%s')\n      const keys = %s\n      return {\n        filter: function(value) {\n          if (!value) {\n            handle.clear()\n          } else {\n            handle.set(keys[value])\n          }\n        }\n      }\n    })()\n  \", id, shared_data$groupName(), toJSON(keys_by_value))\n\n  div(\n    class = class,\n    tags$label(`for` = id, label),\n    tags$select(\n      id = id,\n      onchange = sprintf(\"window['__ct__%s'].filter(this.value)\", id),\n      style = sprintf(\"width: %s\", validateCssUnit(width)),\n      tags$option(value = \"\", \"Alle\"),\n      lapply(choices, function(value) tags$option(value = value, value))\n    ),\n    tags$script(HTML(script))\n  )\n}\n\n# https://glin.github.io/reactable/articles/custom-filtering.html\n# 2023-02-23\n# Creates a data list column filter for a table with the given ID\ndataListFilter &lt;- function(tableId, style = \"width: 100%; height: 28px;\") {\n  function(values, name) {\n    dataListId &lt;- sprintf(\"%s-%s-list\", tableId, name)\n    tagList(\n      tags$input(\n        type = \"text\",\n        list = dataListId,\n        oninput = sprintf(\"Reactable.setFilter('%s', '%s', event.target.value || undefined)\", tableId, name),\n        \"aria-label\" = sprintf(\"Filter %s\", name),\n        style = style\n      ),\n      tags$datalist(\n        id = dataListId,\n        lapply(unique(values), function(value) tags$option(value = value))\n      )\n    )\n  }\n}\n\n\n\n\n\n\nlibrary(crosstalk)\n# shared table\nt2 &lt;- t1 |&gt; select(-Gesamtzahl,-T_rel,-F_rel,-N_rel)\nshared_data &lt;- SharedData$new(t2)\n\n# styles\nsticky_style &lt;- list(backgroundColor = \"#f7f7f7\")\nsticky_style_r &lt;- list(borderTop = \"0px solid #eee\",borderLeft = \"0px solid #eee\",borderRight = \"0px solid #eee\")\n\nrotate_header_style&lt;- list(\n          `white-space` = \"nowrap\",\n          `transform-origin` = \"0% 50%\",\n           transform = \"rotate(-90deg)\",\n          `margin-top` = \"10px\",\n          `margin-bottom` = \"10px\",\n           borderColor = \"#ffffff\"\n        )\nsmall_header_style &lt;- list(`font-size` =  \"10px\")\nsticky_style_l &lt;- list(borderLeft = \"0px solid #eee\")\n\nlibrary(htmltools)\n# reactable\ntbl&lt;-reactable(\n  shared_data,\n  defaultColDef = colDef(\n  #  headerStyle = sticky_style_r,\n    align = \"right\",\n    footerStyle = list(fontWeight = \"bold\"),\n    #   maxWidth = 120,\n    vAlign=\"top\"),\n  searchable = TRUE,\n  resizable = TRUE,\n  wrap = TRUE,\n  pagination=TRUE,\n  paginateSubRows = TRUE,\n  # paginationType = \"jump\", \n  defaultPageSize = 10,\n  showSortable = TRUE,\n  bordered = FALSE,\n  compact=TRUE,\n  # details = function(index) {\n  #t1$Name[index]},\n  #  onClick = \"select\",\n  #height = 800,\n  #  width=600,\n  # defaultPageSize = 20,\n  striped = TRUE,\n  #elementId = \"cars-vis-table\",\n  elementId = \"cars-grouping-table\",\n  highlight = TRUE,\n  \n  filterable = FALSE,\n  groupBy = c(\"cohort\"),\n  columns = list(\n    Sport = colDef(name = \"Sport-AG\",\n                   align=\"left\",\n                   width=70,\n                   headerStyle = small_header_style,\n                   filterable = FALSE),\n    cohort = colDef(name = \"Jahr\",\n                    align=\"left\",\n                    minWidth=60,\n                    headerStyle = small_header_style,\n                    filterable = FALSE),\n    Sex = colDef(name=\"Geschlecht\",\n                 align=\"left\",\n                 width=70,\n                 sortable = FALSE,\n                 #  width = 50,\n                      headerStyle = small_header_style,\n                 filterable=FALSE),\n    Club = colDef(name=\"Verein\",\n                  sortable = FALSE,\n                  filterable=FALSE,\n                  width=60,\n                      headerStyle = small_header_style,\n                  align=\"left\"),\n    Name = colDef(name = \"Schule\",\n                  sortable = TRUE,\n                  show=TRUE,\n                  minWidth = 100,\n                  align=\"left\",\n                  headerStyle = small_header_style,\n                  #style = \"font-weight: 100\",\n                  # Show species under character names\n                  cell = function(value, index) {\n                    School&lt;- t1$School[index]\n                    School &lt;- if (!is.na(School)) School else \"Unknown\"\n                    div(\n                      div(style = \"font-weight: 100\", value),\n                      div(style = \"font-size: 0.75rem\", School)\n                    )\n                  }),\n    School = colDef(show=FALSE,\n                    minWidth = 100,\n                    headerStyle = small_header_style,\n                    sortable = TRUE), #Schulnummer\n    #  School = colDef(show=FALSE),\n    District = colDef(name=\"Kreis\",\n                      minWidth = 80,\n                      headerStyle = small_header_style,\n                      show=TRUE,align=\"left\",sortable = TRUE),\n    # Gesamtzahl= colDef(name=\"N\",\n    #                    width=90,\n    #                    align = \"right\",\n    #           aggregate = \"sum\",\n    #           html=TRUE,\n    #         \n    #        #   footer = function(values) \n    #         #    sprintf(\"&#x2211; %.0f\", \n    #          #           #sum(shared_data$Gesamtzahl)\n    #           #           sum(values)\n    #                     \n    #            #         )\n    #               footer = JS(\"function(colInfo) {\n    #     var total = 0\n    #     colInfo.data.forEach(function(row) {\n    #       total += row['Gesamtzahl']\n    #     })\n    #     return '&#x2211; ' + total.toFixed(0)\n    #   }\")\n    #           ),\n    auswertbar= colDef(name=\"N&lt;sub&gt;a&lt;/sub&gt;\",\n                       html=TRUE,\n                       width=90,\n                       headerStyle = small_header_style,\n                       header = with_tooltip(\"Gesamtzahl &lt;div style=\\\"font-size: 10px; font-weight:normal\\\"&gt; (Anzahl auswertbar)&lt;/div&gt;\",\"vollständig auswertbare Datensätze für diese Darstellungsform (Teilnahme an mind. 4 Testaufgaben, Information zu Geschlecht, Verein UND Sport-AG vorhanden)\"),\n                       align = \"right\",\n                       sticky = \"right\",\n                       aggregate = \"sum\",\n                       #   footer = function(values) \n                       #    sprintf(\"&#x2211; %.0f\", sum(values))\n                       #https://github.com/glin/reactable/issues/78\n                       footer = JS(\"function(colInfo) {\n        var total = 0\n        colInfo.data.forEach(function(row) {\n          total += row['auswertbar']\n        })\n        return '&#x2211; ' + total.toFixed(0)\n      }\")\n    ),\n    T= colDef(align = \"right\",\n              name=\"positiv\",\n              html=TRUE,\n              width=80,\n              headerStyle = small_header_style,\n              header = with_tooltip(\"positiv &lt;div style=\\\"font-size: 10px; font-weight:normal\\\"&gt; (Anzahl)&lt;/div&gt;\",\"'Potentielle Talente:' Anzahl an Schülerinnen und Schülern, die an mindestens vier Motorik-Tests teilnahmen UND mindestens zweimal öfter Testergebnisse im oberen Quintil als im unteren Quintil in Bezug auf die Gesamtstichprobe aus Thüringen für das jeweilige Jahr und Geschlecht erzielten.\"),\n              aggregate = \"sum\",\n              #  footer = function(values) \n              #     sprintf(\"%.0f\", sum(values))\n              footer = JS(\"function(colInfo) {\n        var total = 0\n        colInfo.data.forEach(function(row) {\n          total += row['T']\n        })\n        return '&#x2211; ' + total.toFixed(0)\n      }\")\n    ),\n    F= colDef(align = \"right\",\n              name=\"negativ\",\n              html=TRUE,\n              headerStyle = small_header_style,\n              header = with_tooltip(\"negativ &lt;div style=\\\"font-size: 10px; font-weight:normal\\\"&gt; (Anzahl)&lt;/div&gt;\",\"'Eventueller Förderbedarf:' Anzahl an Schülerinnen und Schülern, die an mindestens vier Motorik-Tests teilnahmen UND die mindestens zweimal öfter Testergebnisse im unteren Quintil als im oberen Quintil in Bezug auf die Gesamtstichprobe aus Thüringen für das jeweilige Jahr und Geschlecht erzielten.\"),\n              width=60,\n              aggregate = \"sum\",\n              #  footer = function(values) \n              #     sprintf(\"%.0f\", sum(values))\n              footer = JS(\"function(colInfo) {\n        var total = 0\n        colInfo.data.forEach(function(row) {\n          total += row['F']\n        })\n        return '&#x2211; ' + total.toFixed(0)\n      }\")\n    ),\n    N= colDef(align = \"right\",\n              name=\"unauffällig\",\n              html=TRUE,\n              headerStyle = small_header_style,\n              sticky = \"right\",\n             \n              header = with_tooltip(\"unauffällig &lt;div style=\\\"font-size: 10px; font-weight:normal\\\"&gt; (Anzahl)&lt;/div&gt;\",\"'Erwartungsgemäß:' Anzahl an Schülerinnen und Schülern, die an mindestens vier Motorik-Tests teilnahmen UND für die NICHT die anderen beiden Bedingungen zutreffen (siehe Tooltips).\"),\n              width=70,\n              aggregate = \"sum\",\n              #  footer = function(values) \n              #     sprintf(\"%.0f\", sum(values))\n              footer = JS(\"function(colInfo) {\n        var total = 0\n        colInfo.data.forEach(function(row) {\n          total += row['N']\n        })\n        return '&#x2211; ' + total.toFixed(0)\n      }\")\n            )),\ncolumnGroups = list(\n  colGroup(\n  name = \"motorisch auffällig\", \n  sticky = \"right\",\n           columns = c(\n                       \"T\",\"F\"))\n  # colGroup(name = \"Gesamtzahl\", \n  #          sticky=\"left\",\n  #          columns = c(\"Gesamtzahl\", \n  #                      \"auswertbar\"))\n  \n ))\n \n\nlibrary(jsonlite)"
  },
  {
    "objectID": "003.html",
    "href": "003.html",
    "title": "Sport-Veranstaltungen",
    "section": "",
    "text": "(A) Räumliche Verteilung und (B) Anzahl der Sport-Veranstaltungen seit dem Jahr 2018\n\n\n\n\n\n\n\n\n\n\n\n\n\nAktualisierungen\n\n\n2023-05-09: Entfernung BibTeX-Zitation, Figure-Caption an Rand, License\n2023-05-08: Zusammenfassung, Umstrukturierung\n2023-05-03: COVID-19-Pandemie Annnotation in Balkendiagramm\n2023-04-25: Erstellen der Seite\n\n\n\nWiederverwendunghttps://creativecommons.org/licenses/by/4.0/deed.deZitatBitte zitieren Sie diese Arbeit als:\nWöhrl, T., & Bähr, F. (2023, April 25).\nSport-Veranstaltungen. https://bekigeki.github.io/003.html"
  },
  {
    "objectID": "010.html",
    "href": "010.html",
    "title": "Version für Druck im Schuljahr 2023/2024",
    "section": "",
    "text": "Warning: package 'ggplot2' was built under R version 4.2.3\n\n\nWarning: package 'stringr' was built under R version 4.2.3\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.0     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nAttaching package: 'kableExtra'\n\n\nThe following object is masked from 'package:dplyr':\n\n    group_rows\n\n\nLinking to GEOS 3.11.0, GDAL 3.5.3, PROJ 9.1.0; sf_use_s2() is TRUE\n\n\nWarning: package 'htmlwidgets' was built under R version 4.2.3\n\n\nWarning: package 'jsonlite' was built under R version 4.2.3\n\n\n\nAttaching package: 'jsonlite'\n\nThe following object is masked from 'package:purrr':\n\n    flatten\n\n\nWarning: Expecting logical in BK1176 / R1176C63: got 'Tanzen/Aerobic'\n\n\nWarning: Expecting logical in BK1214 / R1214C63: got 'Tanzen/Aerobic'\n\n\nWarning: Expecting logical in BK1380 / R1380C63: got 'Sonstige Spiele'\n\n\nWarning: Expecting logical in BK1688 / R1688C63: got 'Andere'\n\n\nWarning: Expecting logical in BK1790 / R1790C63: got 'Große Sportspiele'\n\n\nWarning: Expecting logical in BK2264 / R2264C63: got 'Leichtathletik'\n\n\nWarning: Expecting logical in BK2788 / R2788C63: got 'Andere'\n\n\nWarning: Expecting logical in BK3063 / R3063C63: got 'Sonstige Spiele'\n\n\nWarning: Expecting logical in BK5489 / R5489C63: got 'Andere'\n\n\nWarning: Expecting logical in BK5571 / R5571C63: got 'Leichtathletik'\n\n\nWarning: Expecting logical in BK6227 / R6227C63: got 'Sonstige Spiele'\n\n\nWarning: Expecting logical in BK6430 / R6430C63: got 'Tanzen/Aerobic'\n\n\nWarning: Expecting logical in BK6506 / R6506C63: got 'Sonstige Spiele'\n\n\nWarning: Expecting logical in BK6507 / R6507C63: got 'Große Sportspiele'\n\n\nWarning: Expecting logical in BK6664 / R6664C63: got 'Tanzen/Aerobic'\n\n\nWarning: Expecting logical in BK6887 / R6887C63: got 'Skisport'\n\n\nWarning: Expecting logical in BK6983 / R6983C63: got 'Kampfsport'\n\n\nWarning: Expecting logical in BK7299 / R7299C63: got 'Sonstige Spiele'\n\n\nWarning: Expecting logical in BK7743 / R7743C63: got 'Sonstige Spiele'\n\n\nWarning: Expecting logical in BK7752 / R7752C63: got 'Andere'\n\n\nWarning: Expecting logical in BK7839 / R7839C63: got 'Sonstige Spiele'\n\n\nWarning: Expecting logical in BK8070 / R8070C63: got 'Reiten/Voltigieren'\n\n\nWarning: Expecting logical in BK8076 / R8076C63: got 'Tanzen/Aerobic'\n\n\nWarning: Expecting logical in BK8125 / R8125C63: got 'Andere'\n\n\nWarning: Expecting logical in BK9687 / R9687C63: got 'Andere'\n\n\nWarning: Expecting logical in BK9781 / R9781C63: got 'Andere'\n\n\nWarning: Expecting logical in BK10700 / R10700C63: got 'Reiten/Voltigieren'\n\n\nWarning: Expecting logical in BK10703 / R10703C63: got 'Reiten/Voltigieren'\n\n\nWarning: Expecting logical in BK10737 / R10737C63: got 'Reiten/Voltigieren'\n\n\nWarning: Expecting logical in BK10744 / R10744C63: got 'Reiten/Voltigieren'\n\n\nWarning: Expecting logical in BK11764 / R11764C63: got 'Reiten/Voltigieren'\n\n\nWarning: Expecting logical in BK11779 / R11779C63: got 'Andere'\n\n\nWarning: Expecting logical in BK11805 / R11805C63: got 'Tanzen/Aerobic'\n\n\nWarning: Expecting logical in BK11882 / R11882C63: got 'Reiten/Voltigieren'\n\n\nWarning: Expecting logical in BK11894 / R11894C63: got 'Skisport'\n\n\nWarning: Expecting logical in BK12152 / R12152C63: got 'Große Sportspiele'\n\n\nWarning: Expecting logical in BK12640 / R12640C63: got 'Skisport'\n\n\nWarning: Expecting logical in BK13526 / R13526C63: got 'Große Sportspiele'\n\n\nWarning: Expecting logical in BK13529 / R13529C63: got\n'Turnen/Gymnastik/Akrobatik'\n\n\nWarning: Expecting logical in BK13534 / R13534C63: got 'Große Sportspiele'\n\n\nWarning: Expecting logical in BK13542 / R13542C63: got 'Große Sportspiele'\n\n\nWarning: Expecting logical in BK13703 / R13703C63: got 'Kampfsport'\n\n\nWarning: Expecting logical in BK13718 / R13718C63: got 'Andere'\n\n\nWarning: Expecting logical in BK13898 / R13898C63: got 'Tanzen/Aerobic'\n\n\nWarning: Expecting logical in BK15233 / R15233C63: got 'Sonstige Spiele'\n\n\nWarning: Expecting logical in BK15445 / R15445C63: got 'Leichtathletik'\n\n\nWarning: Expecting logical in BK15660 / R15660C63: got 'Reiten/Voltigieren'\n\n\nWarning: Expecting logical in BK15713 / R15713C63: got 'Leichtathletik'\n\n\nWarning: Expecting logical in BK15792 / R15792C63: got 'Sonstige Spiele'\n\n\nWarning: Expecting logical in BK15907 / R15907C63: got 'Tanzen/Aerobic'\n\n\nWarning: Expecting logical in BK15916 / R15916C63: got 'Tanzen/Aerobic'\n\n\nWarning: Expecting logical in BK15924 / R15924C63: got 'Sonstige Spiele'\n\n\nWarning: Expecting logical in BK15935 / R15935C63: got 'Tanzen/Aerobic'\n\n\nWarning: Expecting logical in BK15936 / R15936C63: got 'Sonstige Spiele'\n\n\nWarning: Expecting logical in BK16046 / R16046C63: got 'Tanzen/Aerobic'\n\n\nWarning: Expecting logical in BK16480 / R16480C63: got 'Große Sportspiele'\n\n\nWarning: Expecting logical in BK17244 / R17244C63: got 'Reiten/Voltigieren'\n\n\nWarning: Expecting logical in BK17341 / R17341C63: got 'Andere'\n\n\nWarning: Expecting logical in BK19030 / R19030C63: got\n'Turnen/Gymnastik/Akrobatik'\n\n\nWarning: Expecting logical in BK19031 / R19031C63: got 'Tanzen/Aerobic'\n\n\nWarning: Expecting logical in BK19032 / R19032C63: got 'Kampfsport'\n\n\nWarning: Expecting logical in BK19044 / R19044C63: got 'Sonstige Spiele'\n\n\nWarning: Expecting logical in BK19045 / R19045C63: got 'Tanzen/Aerobic'\n\n\nWarning: Expecting logical in BK19046 / R19046C63: got 'Große Sportspiele'\n\n\nWarning: Expecting logical in BK19048 / R19048C63: got 'Sonstige Spiele'\n\n\nWarning: Expecting logical in BK19059 / R19059C63: got 'Kampfsport'\n\n\nWarning: Expecting logical in BK19061 / R19061C63: got 'Tanzen/Aerobic'\n\n\nWarning: Expecting logical in BK19813 / R19813C63: got 'Reiten/Voltigieren'\n\n\nWarning: Expecting logical in BK19837 / R19837C63: got 'Leichtathletik'\n\n\nWarning: Expecting logical in BK20079 / R20079C63: got 'Kampfsport'\n\n\nWarning: Expecting logical in BK20080 / R20080C63: got 'Kampfsport'\n\n\nWarning: Expecting logical in BK20119 / R20119C63: got 'Andere'\n\n\nWarning: Expecting logical in BK20127 / R20127C63: got 'Tanzen/Aerobic'\n\n\nWarning: Expecting logical in BK20148 / R20148C63: got 'Kampfsport'\n\n\nWarning: Expecting logical in BK20530 / R20530C63: got 'Reiten/Voltigieren'\n\n\nWarning: Expecting logical in BK20551 / R20551C63: got 'Skisport'\n\n\nWarning: Expecting logical in BK20609 / R20609C63: got 'Sonstige Spiele'\n\n\nWarning: Expecting logical in BK21463 / R21463C63: got 'Andere'\n\n\nWarning: Expecting logical in BK21466 / R21466C63: got 'Leichtathletik'\n\n\nWarning: Expecting logical in BK21470 / R21470C63: got 'Andere'\n\n\nWarning: Expecting logical in BK21471 / R21471C63: got 'Tanzen/Aerobic'\n\n\nWarning: Expecting logical in BK21479 / R21479C63: got 'Tanzen/Aerobic'\n\n\nWarning: Expecting logical in BK21591 / R21591C63: got 'Sonstige Spiele'\n\n\nWarning: Expecting logical in BK21658 / R21658C63: got 'Andere'\n\n\nWarning: Expecting logical in BK22305 / R22305C63: got 'Leichtathletik'\n\n\nWarning: Expecting logical in BK22307 / R22307C63: got 'Leichtathletik'\n\n\nWarning: Expecting logical in BK22320 / R22320C63: got 'Leichtathletik'\n\n\nWarning: Expecting logical in BK22699 / R22699C63: got 'Reiten/Voltigieren'\n\n\nWarning: Expecting logical in BK23268 / R23268C63: got 'Sonstige Spiele'\n\n\nWarning: Expecting logical in BK23269 / R23269C63: got 'Andere'\n\n\nWarning: Expecting logical in BK23271 / R23271C63: got 'Große Sportspiele'\n\n\nWarning: Expecting logical in BK23275 / R23275C63: got 'Andere'\n\n\nWarning: Expecting logical in BK23276 / R23276C63: got\n'Turnen/Gymnastik/Akrobatik'\n\n\nWarning: Expecting logical in BK23278 / R23278C63: got 'Tanzen/Aerobic'\n\n\nWarning: Expecting logical in BK23280 / R23280C63: got 'Reiten/Voltigieren'\n\n\nWarning: Expecting logical in BK23284 / R23284C63: got 'Andere'\n\n\nWarning: Expecting logical in BK23794 / R23794C63: got 'Sonstige Spiele'\n\n\nWarning: Expecting logical in BK24249 / R24249C63: got 'Tanzen/Aerobic'\n\n\nWarning: Expecting logical in BK24286 / R24286C63: got 'Kampfsport'\n\n\nWarning: Expecting logical in BK27413 / R27413C63: got 'Andere'\n\n\nWarning: Expecting logical in BK27471 / R27471C63: got 'Andere'\n\n\nWarning: Expecting logical in BK27486 / R27486C63: got 'Andere'\n\n\nWarning: Expecting logical in BK27834 / R27834C63: got 'Reiten/Voltigieren'\n\n\nWarning: Expecting logical in BK27871 / R27871C63: got 'Reiten/Voltigieren'\n\n\nWarning: Expecting logical in BK27879 / R27879C63: got 'Sonstige Spiele'\n\n\nWarning: Expecting logical in BK28717 / R28717C63: got 'Tanzen/Aerobic'\n\n\nWarning: Expecting logical in BK29231 / R29231C63: got 'Reiten/Voltigieren'\n\n\nWarning: Expecting logical in BK30100 / R30100C63: got 'Skisport'\n\n\nWarning: Expecting logical in BK30406 / R30406C63: got 'Große Sportspiele'\n\n\nWarning: Expecting logical in BK31099 / R31099C63: got 'Reiten/Voltigieren'\n\n\nWarning: Expecting logical in BK31103 / R31103C63: got 'Reiten/Voltigieren'\n\n\nWarning: Expecting logical in BK31115 / R31115C63: got 'Andere'\n\n\nWarning: Expecting logical in BK31131 / R31131C63: got 'Sonstige Spiele'\n\n\nWarning: Expecting logical in BK31148 / R31148C63: got 'Andere'\n\n\nWarning: Expecting logical in BK31149 / R31149C63: got 'Tanzen/Aerobic'\n\n\nWarning: Expecting logical in BK31781 / R31781C63: got 'Reiten/Voltigieren'\n\n\nWarning: Expecting logical in BK31838 / R31838C63: got 'Leichtathletik'\n\n\nWarning: Expecting logical in BK32146 / R32146C63: got 'Leichtathletik'\n\n\nWarning: Expecting logical in BK32346 / R32346C63: got 'Andere'\n\n\nWarning: Expecting logical in BK32357 / R32357C63: got 'Reiten/Voltigieren'\n\n\nWarning: Expecting logical in BK32358 / R32358C63: got 'Reiten/Voltigieren'\n\n\nWarning: Expecting logical in BK32376 / R32376C63: got 'Kampfsport'\n\n\nWarning: Expecting logical in BK32645 / R32645C63: got 'Leichtathletik'\n\n\nWarning: Expecting logical in BK33165 / R33165C63: got 'Andere'\n\n\nWarning: Expecting logical in BK33377 / R33377C63: got 'Andere'\n\n\nWarning: Expecting logical in BK33419 / R33419C63: got 'Tanzen/Aerobic'\n\n\nWarning: Expecting logical in BK33491 / R33491C63: got 'Reiten/Voltigieren'\n\n\nWarning: Expecting logical in BK33508 / R33508C63: got 'Sonstige Spiele'\n\n\nWarning: Expecting logical in BK34320 / R34320C63: got 'Andere'\n\n\nWarning: Expecting logical in BK34333 / R34333C63: got 'Tanzen/Aerobic'\n\n\nWarning: Expecting logical in BK34592 / R34592C63: got 'Andere'\n\n\nWarning: Expecting logical in BK34602 / R34602C63: got 'Andere'\n\n\nWarning: Expecting logical in BK34991 / R34991C63: got 'Sonstige Spiele'\n\n\nWarning: Expecting logical in BK35238 / R35238C63: got 'Reiten/Voltigieren'\n\n\nWarning: Expecting logical in BK35459 / R35459C63: got 'Reiten/Voltigieren'\n\n\nWarning: Expecting logical in BK35893 / R35893C63: got 'Sonstige Spiele'\n\n\nWarning: Expecting logical in BK35935 / R35935C63: got 'Reiten/Voltigieren'\n\n\nWarning: Expecting logical in BK36150 / R36150C63: got 'Tanzen/Aerobic'\n\n\nWarning: Expecting logical in BK36160 / R36160C63: got 'Tanzen/Aerobic'\n\n\nWarning: Expecting logical in BK36888 / R36888C63: got 'Tanzen/Aerobic'\n\n\nWarning: Expecting logical in BK37612 / R37612C63: got 'Sonstige Spiele'\n\n\nWarning: Expecting logical in BK37906 / R37906C63: got 'Skisport'\n\n\nWarning: Expecting logical in BK38029 / R38029C63: got 'Reiten/Voltigieren'\n\n\nWarning: Expecting logical in BK38429 / R38429C63: got 'Andere'\n\n\nWarning: Expecting logical in BK38749 / R38749C63: got 'Andere'\n\n\nWarning: Expecting logical in BK38758 / R38758C63: got 'Leichtathletik'\n\n\nWarning: Expecting logical in BK38763 / R38763C63: got 'Kampfsport'\n\n\nWarning: Expecting logical in BK38959 / R38959C63: got 'Andere'\n\n\nWarning: Expecting logical in BK39004 / R39004C63: got 'Reiten/Voltigieren'\n\n\nWarning: Expecting logical in BK39135 / R39135C63: got 'Skisport'\n\n\nWarning: Expecting logical in BK39451 / R39451C63: got 'Andere'\n\n\nWarning: Expecting logical in BK40523 / R40523C63: got 'Andere'\n\n\nWarning: Expecting logical in BK40541 / R40541C63: got 'Andere'\n\n\nWarning: Expecting logical in BK40551 / R40551C63: got 'Sonstige Spiele'\n\n\nWarning: Expecting logical in BK40597 / R40597C63: got 'Leichtathletik'\n\n\nWarning: Expecting logical in BK40606 / R40606C63: got 'Reiten/Voltigieren'\n\n\nWarning: Expecting logical in BK40693 / R40693C63: got 'Sonstige Spiele'\n\n\nWarning: Expecting logical in BK40724 / R40724C63: got 'Andere'\n\n\nWarning: Expecting logical in BK40970 / R40970C63: got 'Andere'\n\n\nWarning: Expecting logical in BK41099 / R41099C63: got 'Andere'\n\n\nWarning: Expecting logical in BK41169 / R41169C63: got 'Andere'\n\n\nWarning: Expecting logical in BK41846 / R41846C63: got 'Leichtathletik'\n\n\nWarning: Expecting logical in BK42125 / R42125C63: got 'Sonstige Spiele'\n\n\nWarning: Expecting logical in BK42126 / R42126C63: got 'Sonstige Spiele'\n\n\nWarning: Expecting logical in BK42134 / R42134C63: got 'Andere'\n\n\nWarning: Expecting logical in BK42163 / R42163C63: got 'Skisport'\n\n\nWarning: Expecting logical in BK42282 / R42282C63: got 'Tanzen/Aerobic'\n\n\nWarning: Expecting logical in BK42373 / R42373C63: got 'Tanzen/Aerobic'\n\n\nWarning: Expecting logical in BK42400 / R42400C63: got 'Reiten/Voltigieren'\n\n\nWarning: Expecting logical in BK42579 / R42579C63: got 'Kampfsport'\n\n\nWarning: Expecting logical in BK42585 / R42585C63: got 'Sonstige Spiele'\n\n\nWarning: Expecting logical in BK42619 / R42619C63: got 'Andere'\n\n\nWarning: Expecting logical in BK42991 / R42991C63: got 'Sonstige Spiele'\n\n\nWarning: Expecting logical in BK43009 / R43009C63: got 'Sonstige Spiele'\n\n\nWarning: Expecting logical in BK43031 / R43031C63: got 'Leichtathletik'\n\n\nWarning: Expecting logical in BK43069 / R43069C63: got 'Tanzen/Aerobic'\n\n\nWarning: Expecting logical in BK43166 / R43166C63: got 'Leichtathletik'\n\n\nWarning: Expecting logical in BK43283 / R43283C63: got 'Reiten/Voltigieren'\n\n\nWarning: Expecting logical in BK43289 / R43289C63: got 'Reiten/Voltigieren'\n\n\nWarning: Expecting logical in BK43394 / R43394C63: got 'Tanzen/Aerobic'\n\n\nWarning: Expecting logical in BK43482 / R43482C63: got 'Andere'\n\n\nWarning: Expecting logical in BK43563 / R43563C63: got 'Tanzen/Aerobic'\n\n\nWarning: Expecting logical in BK43613 / R43613C63: got 'Andere'\n\n\nWarning: Expecting logical in BK45236 / R45236C63: got 'Reiten/Voltigieren'\n\n\nWarning: Expecting logical in BK45269 / R45269C63: got 'Andere'\n\n\nWarning: Expecting logical in BK45273 / R45273C63: got 'Andere'\n\n\nWarning: Expecting logical in BK45601 / R45601C63: got 'Andere'\n\n\nWarning: Expecting logical in BK45643 / R45643C63: got 'Tanzen/Aerobic'\n\n\nWarning: Expecting logical in BK46289 / R46289C63: got 'Andere'\n\n\nWarning: Expecting logical in BK46291 / R46291C63: got 'Reiten/Voltigieren'\n\n\nWarning: Expecting logical in BK46296 / R46296C63: got 'Skisport'\n\n\nWarning: Expecting logical in BK46302 / R46302C63: got 'Andere'\n\n\nWarning: Expecting logical in BK46357 / R46357C63: got 'Sonstige Spiele'\n\n\nWarning: Expecting logical in BK47328 / R47328C63: got 'Reiten/Voltigieren'\n\n\nWarning: Expecting logical in BK48821 / R48821C63: got 'Leichtathletik'\n\n\nWarning: Expecting logical in BK48850 / R48850C63: got 'Skisport'\n\n\nWarning: Expecting logical in BK48944 / R48944C63: got 'Andere'\n\n\nWarning: Expecting logical in BK48962 / R48962C63: got 'Reiten/Voltigieren'\n\n\nWarning: Expecting logical in BK49206 / R49206C63: got 'Leichtathletik'\n\n\nWarning: Expecting logical in BK49640 / R49640C63: got 'Andere'\n\n\nWarning: Expecting logical in BK49675 / R49675C63: got 'Andere'\n\n\nWarning: Expecting logical in BK49891 / R49891C63: got 'Skisport'\n\n\nWarning: Expecting logical in BK50134 / R50134C63: got 'Sonstige Spiele'\n\n\nWarning: Expecting logical in BK50290 / R50290C63: got 'Skisport'\n\n\n\n\n\n\n\n\n\n\n\nWarning: There was 1 warning in `reframe()`.\nℹ In argument: `across()`.\nCaused by warning:\n! Using `across()` without supplying `.cols` was deprecated in dplyr 1.1.0.\nℹ Please supply `.cols` instead."
  },
  {
    "objectID": "010.html#filter-definitions",
    "href": "010.html#filter-definitions",
    "title": "Version für Druck im Schuljahr 2023/2024",
    "section": "",
    "text": "Warning: There was 1 warning in `reframe()`.\nℹ In argument: `across()`.\nCaused by warning:\n! Using `across()` without supplying `.cols` was deprecated in dplyr 1.1.0.\nℹ Please supply `.cols` instead."
  }
]